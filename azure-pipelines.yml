# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/src/Orange.StatsD/*.csproj'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/src/Orange.StatsD/*.csproj'
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/src/Orange.StatsD/*.csproj'
    versioningScheme: 'off'
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget_external_service'
- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget_external_service'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: '/570a8f14-118c-469b-aac2-9a55d849f703'
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'nuget_service'